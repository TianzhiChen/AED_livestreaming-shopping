/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.DeliveryAgentWorkArea;

import Business.Business;
import Business.Customer.Customer;
import Business.Customer.Order;
import Business.Delivery.DeliveryAgent;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tianzhichen
 */
public class ShippmentManagementJPanel extends javax.swing.JPanel {

    Business business;
    UserAccount userAccount;
    DefaultTableModel deliveryTableModel;

    /**
     * Creates new form ShippmentManagementJPanel
     */
    public ShippmentManagementJPanel() {
        initComponents();
    }

    public ShippmentManagementJPanel(Business business, UserAccount userAccount) {
        initComponents();
        this.business = business;
        this.userAccount = userAccount;

        this.deliveryTableModel = (DefaultTableModel) deliveryTable.getModel();
        populateDelivey();
        populateDp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryTable = new javax.swing.JTable();
        sentBtn = new javax.swing.JButton();
        deliveredBtn = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        assignBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1200, 1300));
        setMinimumSize(new java.awt.Dimension(1200, 1300));
        setPreferredSize(new java.awt.Dimension(1200, 1300));
        setSize(new java.awt.Dimension(1200, 1300));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deliveryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order", "Customer", "Merchant", "Status", "Delivery"
            }
        ));
        jScrollPane1.setViewportView(deliveryTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 400, 310));

        sentBtn.setText("SENT");
        sentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sentBtnActionPerformed(evt);
            }
        });
        add(sentBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 110, 30));

        deliveredBtn.setText("DELIVERED");
        deliveredBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveredBtnActionPerformed(evt);
            }
        });
        add(deliveredBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 500, 110, 30));

        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 170, 30));

        assignBtn.setText("ASSIGN");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, 110, 30));

        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, 110, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/kier-in-sight-Tuo1C7bvkv8-unsplash.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1410, -650, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void deliveredBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveredBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = deliveryTable.getSelectedRow();

        Order o = (Order) deliveryTable.getValueAt(selectedRow, 0);

        o.setStatus(Order.Status.DELIVERED);
        populateDelivey();
    }//GEN-LAST:event_deliveredBtnActionPerformed

    private void sentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sentBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = deliveryTable.getSelectedRow();

        Order o = (Order) deliveryTable.getValueAt(selectedRow, 0);

        o.setStatus(Order.Status.DELIVERING);
        populateDelivey();
    }//GEN-LAST:event_sentBtnActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = deliveryTable.getSelectedRow();
        if (selectedRow >= 0) {
            String agentName = (String) jComboBox1.getSelectedItem();
            DeliveryAgent agent = this.business.getDeliveryAgentDirectory().findbyname(agentName);

            Order o = (Order) deliveryTable.getValueAt(selectedRow, 0);
            String orderID = o.getId();
            Customer c = this.business.getCustomerDirectory().findCustomerByName(o.getCustomer().getName());
            c.findOrderByID(orderID).setAgent(agent);

            agent.addDeliveryOrder(o);
            c.findOrderByID(orderID).setStatus(Order.Status.READY);
            JOptionPane.showMessageDialog(null, "Assign successfully！");
            this.populateDelivey();
        } else {
            JOptionPane.showMessageDialog(null, "Assign failed！");
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = deliveryTable.getSelectedRow();

        if (selectedRow >= 0) {
            String agentName = (String) jComboBox1.getSelectedItem();
            DeliveryAgent agent = this.business.getDeliveryAgentDirectory().findbyname(agentName);

            Order o = (Order) deliveryTable.getValueAt(selectedRow, 0);
            String orderID = o.getId();
            Customer c = this.business.getCustomerDirectory().findCustomerByName(o.getCustomer().getName());
            c.findOrderByID(orderID).setAgent(agent);

            agent.addDeliveryOrder(o);
            c.findOrderByID(orderID).setStatus(Order.Status.READY);
            JOptionPane.showMessageDialog(null, "Updated successfully！");
            this.populateDelivey();
        } else {
            JOptionPane.showMessageDialog(null, "Updated failed！");
        }
        populateDelivey();
    }//GEN-LAST:event_updateBtnActionPerformed

    public void populateDelivey() {
        deliveryTableModel.setRowCount(0);
//        for (Order o : this.business.getAllOrders().getOrderList()) {
//            System.out.println(this.business.getAllOrders().getOrderList().size());
//
//            Object[] row = new Object[4];
//
//            row[0] = o;
//            row[1] = o.getCustomer().getName();
//            row[2] = o.getMerchant().getMerchantName();
//            row[3] = o.getStatus();
//
//            deliveryTableModel.addRow(row);
//        }
        for (Customer c : this.business.getCustomerDirectory().getCustomerDirectory()) {
            for (Order o : c.getOrderList()) {
                Object[] row = new Object[5];
                row[0] = o;
                row[1] = o.getCustomer().getName();
                row[2] = o.getMerchant().getMerchantName();
                row[3] = o.getStatus();
                row[4] = o.getAgent();

                deliveryTableModel.addRow(row);
            }
        }

    }

    public void populateDp() {
        jComboBox1.removeAllItems();
        for (DeliveryAgent d : this.business.getDeliveryAgentDirectory().getAgents()) {
            jComboBox1.addItem(d.getName());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton deliveredBtn;
    private javax.swing.JTable deliveryTable;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sentBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
