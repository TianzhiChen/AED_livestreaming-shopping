/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemWorkArea;

import Business.Business;
import Business.Merchant.Merchant;
import Business.ProductSchedule.Schedule;
import Business.UserAccount.UserAccount;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tianshiyun
 */
public class InfoJPanel extends javax.swing.JPanel {
        Business business;
        UserAccount userAccount;
        DefaultTableModel userTableModel;
    /**
     * Creates new form InfoJPanel
     */
    public InfoJPanel() {
        initComponents();
    }
    
    public InfoJPanel(Business business, UserAccount userAccount) {
        initComponents();
        this.business = business;
        this.userAccount = userAccount;
        this.userTableModel = (DefaultTableModel) userTable.getModel();
        display();
        
    }
    
    public void display(){
        userTableModel.setRowCount(0);
        
        for(Merchant m: this.business.getMerchantDirectory().getMerchantList()){  
            for(UserAccount u: this.business.getUserAccountDirectory().getUserAccounts()){
                Object[] row = new Object[3];
                row[0] = u.getUsername();
                row[1] = u.getPassword();
                row[2] = u.getRole();
                userTableModel.addRow(row);
            }
        }                              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        nameTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordTxt = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        chooseButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));
        setLocation(new java.awt.Point(1200, 1300));
        setMaximumSize(new java.awt.Dimension(1200, 1300));
        setMinimumSize(new java.awt.Dimension(1200, 1300));
        setPreferredSize(new java.awt.Dimension(1200, 1300));
        setSize(new java.awt.Dimension(1200, 1300));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "User Name", "Password", "Role"
            }
        ));
        userTable.setMaximumSize(new java.awt.Dimension(1200, 1000));
        userTable.setMinimumSize(new java.awt.Dimension(1200, 1000));
        userTable.setPreferredSize(new java.awt.Dimension(1200, 1000));
        userTable.setSize(new java.awt.Dimension(1200, 1000));
        jScrollPane1.setViewportView(userTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 183, 498, 223));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 85, 120, 30));
        add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 85, 240, 30));

        jLabel1.setText("Username");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 566, -1, -1));
        add(usernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 555, 266, 40));

        jLabel2.setText("Password");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 643, -1, -1));
        add(passwordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 632, 266, 40));

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 733, 384, 41));

        jLabel3.setText("Username");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 88, -1, -1));

        chooseButton.setText("Choose Button");
        chooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseButtonActionPerformed(evt);
            }
        });
        add(chooseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 433, 294, 35));

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 809, 384, 40));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pawel-czerwinski-2PN18U8CKi0-unsplash.jpg"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userTableModel.setRowCount(0);
        String name = nameTxt.getText();
        for(UserAccount u: this.business.getUserAccountDirectory().getUserAccounts()){
            if(u.getUsername().equals(name)){
                Object[] row = new Object[3];
                row[0] = u.getUsername();
                row[1] = u.getPassword();
                row[2] = u.getRole();
                userTableModel.addRow(row);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseButtonActionPerformed
        int selectedRow = userTable.getSelectedRow();
        if (selectedRow >= 0){
            UserAccount user = (UserAccount)userTable.getValueAt(selectedRow, 0);
            nameTxt.setText(user.getUsername());
            passwordTxt.setText(user.getPassword());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int selectedRow = userTable.getSelectedRow();
        if (selectedRow >= 0){
            UserAccount user = (UserAccount)userTable.getValueAt(selectedRow, 0);
                usernameTxt.setText(user.getUsername());
                passwordTxt.setText(user.getPassword());
             String name = usernameTxt.getText();
             String password = passwordTxt.getText();
             user.setUsername(name);
             user.setPassword(password);
             return;
        }
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = userTable.getSelectedRow();
        if (selectedRow >= 0){
            UserAccount user = (UserAccount)userTable.getValueAt(selectedRow, 0);
            this.business.getUserAccountDirectory().getUserAccounts().remove(user);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JButton updateButton;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField usernameTxt;
    // End of variables declaration//GEN-END:variables
}
